{"version":3,"sources":["components/AddCategory.js","utils/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","App","categories","length","ReactDOM","render","document","getElementById"],"mappings":"6MA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAazC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,IACFF,GAAc,SAACO,GAAD,OAAWL,GAAX,mBAA0BK,OACxCJ,EAAc,OAMd,2BACEK,KAAK,OACLC,MAAOP,EACPQ,SAfoB,SAACL,GAAD,OAAOF,EAAcE,EAAEM,OAAOF,QAgBlDG,YAAY,mB,uBCNLC,EAhBF,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UACpDH,GAFY,+DAIKI,MAAMF,GAJX,cAIRG,EAJQ,gBAKSA,EAAKC,OALd,uBAKNC,EALM,EAKNA,KALM,kBAOPA,EAAKC,KAAI,SAACC,GAAS,IAAD,EACvB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,SAXxB,2CAAH,sDCcEY,EAXK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC5B,OACE,yBAAKa,UAAU,4DACb,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,uBAAGI,UAAU,wDACVJ,KCgBMO,EAnBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDZ2BK,CAAazB,GAAvCmB,EADwB,EACxBA,QAAeP,EADS,EACfL,KACjB,OACE,oCACE,wBAAIG,GAAG,SAASV,GACfmB,GAAW,0CACZ,yBAAKJ,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEYzBkB,EArBH,WAAO,IAAD,EACoBxC,mBAAS,IAD7B,mBACTyC,EADS,KACG1C,EADH,KAGhB,OACE,oCACE,wBAAI6B,UAAU,sCAAd,kBACA,kBAAC,EAAD,CAAa7B,cAAeA,IAC5B,6BACA,4BACG0C,EAAWC,OAAS,EACnBD,EAAWpB,KAAI,SAACR,GAAD,OACb,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,OAGpC,uBAAGU,GAAG,UAAN,sCCbVoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.958e1974.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Busca un GIF\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=4RKX1dm0OdA29rNPJHyZPgMZc2NT44Od`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  return data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n};\r\n\r\nexport default getGifs;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={url} alt={title} />\r\n      <p className=\"animate__jello animate__backInDown animate__delay-2s\">\r\n        {title}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { loading, data: images } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3 id=\"query\">{category}</h3>\r\n      {loading && <p>Cargando...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../utils/helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst App = () => {\n  const [categories, setCategories] = useState([]);\n\n  return (\n    <>\n      <h2 className=\"animate__jello animate__backInDown\">Gif Expert App</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ul>\n        {categories.length > 0 ? (\n          categories.map((category) => (\n            <GifGrid key={category} category={category} />\n          ))\n        ) : (\n          <p id=\"no-gif\">Aquí se mostrarán los GIF</p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}